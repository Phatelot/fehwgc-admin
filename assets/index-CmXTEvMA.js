var yr=Object.defineProperty;var wr=(e,t,r)=>t in e?yr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var G=(e,t,r)=>wr(e,typeof t!="symbol"?t+"":t,r);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function r(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=r(i);fetch(i.href,n)}})();function U(){}function Ir(e){return!!e&&(typeof e=="object"||typeof e=="function")&&typeof e.then=="function"}function Bt(e){return e()}function dt(){return Object.create(null)}function Q(e){e.forEach(Bt)}function Ut(e){return typeof e=="function"}function Fe(e,t){return e!=e?t==t:e!==t||e&&typeof e=="object"||typeof e=="function"}function vr(e){return Object.keys(e).length===0}function O(e,t){e.appendChild(t)}function B(e,t,r){e.insertBefore(t,r||null)}function D(e){e.parentNode&&e.parentNode.removeChild(e)}function Ce(e,t){for(let r=0;r<e.length;r+=1)e[r]&&e[r].d(t)}function F(e){return document.createElement(e)}function V(e){return document.createTextNode(e)}function x(){return V(" ")}function q(e,t,r,s){return e.addEventListener(t,r,s),()=>e.removeEventListener(t,r,s)}function z(e,t,r){r==null?e.removeAttribute(t):e.getAttribute(t)!==r&&e.setAttribute(t,r)}function jt(e){return e===""?null:+e}function Lr(e){return Array.from(e.childNodes)}function qt(e,t){t=""+t,e.data!==t&&(e.data=t)}function N(e,t){e.value=t??""}function le(e,t,r,s){r==null?e.style.removeProperty(t):e.style.setProperty(t,r,"")}function me(e,t,r){for(let s=0;s<e.options.length;s+=1){const i=e.options[s];if(i.__value===t){i.selected=!0;return}}(!r||t!==void 0)&&(e.selectedIndex=-1)}function ft(e){const t=e.querySelector(":checked");return t&&t.__value}function kr(e,t,{bubbles:r=!1,cancelable:s=!1}={}){return new CustomEvent(e,{detail:t,bubbles:r,cancelable:s})}let ce;function H(e){ce=e}function $t(){if(!ce)throw new Error("Function called outside component initialization");return ce}function Wr(){const e=$t();return(t,r,{cancelable:s=!1}={})=>{const i=e.$$.callbacks[t];if(i){const n=kr(t,r,{cancelable:s});return i.slice().forEach(a=>{a.call(e,n)}),!n.defaultPrevented}return!0}}const ee=[],St=[];let se=[];const bt=[],Pr=Promise.resolve();let Ge=!1;function Cr(){Ge||(Ge=!0,Pr.then(De))}function pe(e){se.push(e)}const Ie=new Set;let X=0;function De(){if(X!==0)return;const e=ce;do{try{for(;X<ee.length;){const t=ee[X];X++,H(t),Gr(t.$$)}}catch(t){throw ee.length=0,X=0,t}for(H(null),ee.length=0,X=0;St.length;)St.pop()();for(let t=0;t<se.length;t+=1){const r=se[t];Ie.has(r)||(Ie.add(r),r())}se.length=0}while(ee.length);for(;bt.length;)bt.pop()();Ge=!1,Ie.clear(),H(e)}function Gr(e){if(e.fragment!==null){e.update(),Q(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(pe)}}function Or(e){const t=[],r=[];se.forEach(s=>e.indexOf(s)===-1?t.push(s):r.push(s)),r.forEach(s=>s()),se=t}const fe=new Set;let K;function Nt(){K={r:0,c:[],p:K}}function Ht(){K.r||Q(K.c),K=K.p}function M(e,t){e&&e.i&&(fe.delete(e),e.i(t))}function ie(e,t,r,s){if(e&&e.o){if(fe.has(e))return;fe.add(e),K.c.push(()=>{fe.delete(e),s&&(r&&e.d(1),s())}),e.o(t)}else s&&s()}function Ar(e,t){const r=t.token={};function s(i,n,a,c){if(t.token!==r)return;t.resolved=c;let g=t.ctx;a!==void 0&&(g=g.slice(),g[a]=c);const f=i&&(t.current=i)(g);let T=!1;t.block&&(t.blocks?t.blocks.forEach((b,L)=>{L!==n&&b&&(Nt(),ie(b,1,1,()=>{t.blocks[L]===b&&(t.blocks[L]=null)}),Ht())}):t.block.d(1),f.c(),M(f,1),f.m(t.mount(),t.anchor),T=!0),t.block=f,t.blocks&&(t.blocks[n]=f),T&&De()}if(Ir(e)){const i=$t();if(e.then(n=>{H(i),s(t.then,1,t.value,n),H(null)},n=>{if(H(i),s(t.catch,2,t.error,n),H(null),!t.hasCatch)throw n}),t.current!==t.pending)return s(t.pending,0),!0}else{if(t.current!==t.then)return s(t.then,1,t.value,e),!0;t.resolved=e}}function Rr(e,t,r){const s=t.slice(),{resolved:i}=e;e.current===e.then&&(s[e.value]=i),e.current===e.catch&&(s[e.error]=i),e.block.p(s,r)}function te(e){return(e==null?void 0:e.length)!==void 0?e:Array.from(e)}function xt(e){e&&e.c()}function Be(e,t,r){const{fragment:s,after_update:i}=e.$$;s&&s.m(t,r),pe(()=>{const n=e.$$.on_mount.map(Bt).filter(Ut);e.$$.on_destroy?e.$$.on_destroy.push(...n):Q(n),e.$$.on_mount=[]}),i.forEach(pe)}function Ue(e,t){const r=e.$$;r.fragment!==null&&(Or(r.after_update),Q(r.on_destroy),r.fragment&&r.fragment.d(t),r.on_destroy=r.fragment=null,r.ctx=[])}function Fr(e,t){e.$$.dirty[0]===-1&&(ee.push(e),Cr(),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function je(e,t,r,s,i,n,a=null,c=[-1]){const g=ce;H(e);const f=e.$$={fragment:null,ctx:[],props:n,update:U,not_equal:i,bound:dt(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(g?g.$$.context:[])),callbacks:dt(),dirty:c,skip_bound:!1,root:t.target||g.$$.root};a&&a(f.root);let T=!1;if(f.ctx=r?r(e,t.props||{},(b,L,...k)=>{const I=k.length?k[0]:L;return f.ctx&&i(f.ctx[b],f.ctx[b]=I)&&(!f.skip_bound&&f.bound[b]&&f.bound[b](I),T&&Fr(e,b)),L}):[],f.update(),T=!0,Q(f.before_update),f.fragment=s?s(f.ctx):!1,t.target){if(t.hydrate){const b=Lr(t.target);f.fragment&&f.fragment.l(b),b.forEach(D)}else f.fragment&&f.fragment.c();t.intro&&M(e.$$.fragment),Be(e,t.target,t.anchor),De()}H(g)}class qe{constructor(){G(this,"$$");G(this,"$$set")}$destroy(){Ue(this,1),this.$destroy=U}$on(t,r){if(!Ut(r))return U;const s=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return s.push(r),()=>{const i=s.indexOf(r);i!==-1&&s.splice(i,1)}}$set(t){this.$$set&&!vr(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}const Dr="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(Dr);function Se(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function $e(e,t,r,s){if(typeof r!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(t)?t.reverse().reduce((i,n)=>$e.bind(null,e,n,i,s),r)():Promise.resolve().then(()=>e.registry[t]?e.registry[t].reduce((i,n)=>n.hook.bind(null,i,s),r)():r(s))}function Br(e,t,r,s){const i=s;e.registry[r]||(e.registry[r]=[]),t==="before"&&(s=(n,a)=>Promise.resolve().then(i.bind(null,a)).then(n.bind(null,a))),t==="after"&&(s=(n,a)=>{let c;return Promise.resolve().then(n.bind(null,a)).then(g=>(c=g,i(c,a))).then(()=>c)}),t==="error"&&(s=(n,a)=>Promise.resolve().then(n.bind(null,a)).catch(c=>i(c,a))),e.registry[r].push({hook:s,orig:i})}function Ur(e,t,r){if(!e.registry[t])return;const s=e.registry[t].map(i=>i.orig).indexOf(r);s!==-1&&e.registry[t].splice(s,1)}const Tt=Function.bind,_t=Tt.bind(Tt);function Mt(e,t,r){const s=_t(Ur,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(i=>{const n=r?[t,i,r]:[t,i];e[i]=e.api[i]=_t(Br,null).apply(null,n)})}function jr(){const e=Symbol("Singular"),t={registry:{}},r=$e.bind(null,t,e);return Mt(r,t,e),r}function qr(){const e={registry:{}},t=$e.bind(null,e);return Mt(t,e),t}const $r={Singular:jr,Collection:qr};var Nr="0.0.0-development",Hr=`octokit-endpoint.js/${Nr} ${Se()}`,xr={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":Hr},mediaType:{format:""}};function Mr(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function Vr(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const t=Object.getPrototypeOf(e);if(t===null)return!0;const r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}function Vt(e,t){const r=Object.assign({},e);return Object.keys(t).forEach(s=>{Vr(t[s])?s in e?r[s]=Vt(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}function Et(e){for(const t in e)e[t]===void 0&&delete e[t];return e}function Oe(e,t,r){var i;if(typeof t=="string"){let[n,a]=t.split(" ");r=Object.assign(a?{method:n,url:a}:{url:n},r)}else r=Object.assign({},t);r.headers=Mr(r.headers),Et(r),Et(r.headers);const s=Vt(e||{},r);return r.url==="/graphql"&&(e&&((i=e.mediaType.previews)!=null&&i.length)&&(s.mediaType.previews=e.mediaType.previews.filter(n=>!s.mediaType.previews.includes(n)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(n=>n.replace(/-preview/,""))),s}function zr(e,t){const r=/\?/.test(e)?"&":"?",s=Object.keys(t);return s.length===0?e:e+r+s.map(i=>i==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${i}=${encodeURIComponent(t[i])}`).join("&")}var Kr=/\{[^}]+\}/g;function Yr(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Qr(e){const t=e.match(Kr);return t?t.map(Yr).reduce((r,s)=>r.concat(s),[]):[]}function yt(e,t){const r={__proto__:null};for(const s of Object.keys(e))t.indexOf(s)===-1&&(r[s]=e[s]);return r}function zt(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function re(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function ae(e,t,r){return t=e==="+"||e==="#"?zt(t):re(t),r?re(r)+"="+t:t}function Z(e){return e!=null}function ve(e){return e===";"||e==="&"||e==="?"}function Jr(e,t,r,s){var i=e[r],n=[];if(Z(i)&&i!=="")if(typeof i=="string"||typeof i=="number"||typeof i=="boolean")i=i.toString(),s&&s!=="*"&&(i=i.substring(0,parseInt(s,10))),n.push(ae(t,i,ve(t)?r:""));else if(s==="*")Array.isArray(i)?i.filter(Z).forEach(function(a){n.push(ae(t,a,ve(t)?r:""))}):Object.keys(i).forEach(function(a){Z(i[a])&&n.push(ae(t,i[a],a))});else{const a=[];Array.isArray(i)?i.filter(Z).forEach(function(c){a.push(ae(t,c))}):Object.keys(i).forEach(function(c){Z(i[c])&&(a.push(re(c)),a.push(ae(t,i[c].toString())))}),ve(t)?n.push(re(r)+"="+a.join(",")):a.length!==0&&n.push(a.join(","))}else t===";"?Z(i)&&n.push(re(r)):i===""&&(t==="&"||t==="?")?n.push(re(r)+"="):i===""&&n.push("");return n}function Xr(e){return{expand:Zr.bind(null,e)}}function Zr(e,t){var r=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,i,n){if(i){let c="";const g=[];if(r.indexOf(i.charAt(0))!==-1&&(c=i.charAt(0),i=i.substr(1)),i.split(/,/g).forEach(function(f){var T=/([^:\*]*)(?::(\d+)|(\*))?/.exec(f);g.push(Jr(t,c,T[1],T[2]||T[3]))}),c&&c!=="+"){var a=",";return c==="?"?a="&":c!=="#"&&(a=c),(g.length!==0?c:"")+g.join(a)}else return g.join(",")}else return zt(n)}),e==="/"?e:e.replace(/\/$/,"")}function Kt(e){var T;let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),i,n=yt(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Qr(r);r=Xr(r).expand(n),/^http/.test(r)||(r=e.baseUrl+r);const c=Object.keys(e).filter(b=>a.includes(b)).concat("baseUrl"),g=yt(n,c);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(b=>b.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),r.endsWith("/graphql")&&(T=e.mediaType.previews)!=null&&T.length)){const b=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=b.concat(e.mediaType.previews).map(L=>{const k=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${L}-preview${k}`}).join(",")}return["GET","HEAD"].includes(t)?r=zr(r,g):"data"in g?i=g.data:Object.keys(g).length&&(i=g),!s["content-type"]&&typeof i<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof i>"u"&&(i=""),Object.assign({method:t,url:r,headers:s},typeof i<"u"?{body:i}:null,e.request?{request:e.request}:null)}function eo(e,t,r){return Kt(Oe(e,t,r))}function Yt(e,t){const r=Oe(e,t),s=eo.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:Yt.bind(null,r),merge:Oe.bind(null,r),parse:Kt})}var to=Yt(null,xr);class ue extends Error{constructor(r,s,i){super(r);G(this,"name");G(this,"status");G(this,"request");G(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in i&&(this.response=i.response);const n=Object.assign({},i.request);i.request.headers.authorization&&(n.headers=Object.assign({},i.request.headers,{authorization:i.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),n.url=n.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=n}}var ro="0.0.0-development",oo={headers:{"user-agent":`octokit-request.js/${ro} ${Se()}`}};function so(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const t=Object.getPrototypeOf(e);if(t===null)return!0;const r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}async function wt(e){var b,L,k,I,w;const t=((b=e.request)==null?void 0:b.fetch)||globalThis.fetch;if(!t)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const r=((L=e.request)==null?void 0:L.log)||console,s=((k=e.request)==null?void 0:k.parseSuccessResponseBody)!==!1,i=so(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,n=Object.fromEntries(Object.entries(e.headers).map(([E,d])=>[E,String(d)]));let a;try{a=await t(e.url,{method:e.method,body:i,redirect:(I=e.request)==null?void 0:I.redirect,headers:n,signal:(w=e.request)==null?void 0:w.signal,...e.body&&{duplex:"half"}})}catch(E){let d="Unknown Error";if(E instanceof Error){if(E.name==="AbortError")throw E.status=500,E;d=E.message,E.name==="TypeError"&&"cause"in E&&(E.cause instanceof Error?d=E.cause.message:typeof E.cause=="string"&&(d=E.cause))}const C=new ue(d,500,{request:e});throw C.cause=E,C}const c=a.status,g=a.url,f={};for(const[E,d]of a.headers)f[E]=d;const T={url:g,status:c,headers:f,data:""};if("deprecation"in f){const E=f.link&&f.link.match(/<([^>]+)>; rel="deprecation"/),d=E&&E.pop();r.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${f.sunset}${d?`. See ${d}`:""}`)}if(c===204||c===205)return T;if(e.method==="HEAD"){if(c<400)return T;throw new ue(a.statusText,c,{response:T,request:e})}if(c===304)throw T.data=await Le(a),new ue("Not modified",c,{response:T,request:e});if(c>=400)throw T.data=await Le(a),new ue(io(T.data),c,{response:T,request:e});return T.data=s?await Le(a):a.body,T}async function Le(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json().catch(()=>e.text()).catch(()=>""):!t||/^text\/|charset=utf-8$/.test(t)?e.text():e.arrayBuffer()}function io(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const t="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(r=>JSON.stringify(r)).join(", ")}${t}`:`${e.message}${t}`}return`Unknown error: ${JSON.stringify(e)}`}function Ae(e,t){const r=e.defaults(t);return Object.assign(function(i,n){const a=r.merge(i,n);if(!a.request||!a.request.hook)return wt(r.parse(a));const c=(g,f)=>wt(r.parse(r.merge(g,f)));return Object.assign(c,{endpoint:r,defaults:Ae.bind(null,r)}),a.request.hook(c,a)},{endpoint:r,defaults:Ae.bind(null,r)})}var Re=Ae(to,oo),no="0.0.0-development";function ao(e){return`Request failed due to following response errors:
`+e.errors.map(t=>` - ${t.message}`).join(`
`)}var uo=class extends Error{constructor(t,r,s){super(ao(s));G(this,"name","GraphqlResponseError");G(this,"errors");G(this,"data");this.request=t,this.headers=r,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},lo=["method","baseUrl","url","headers","request","query","mediaType"],ho=["query","method","url"],It=/\/api\/v3\/?$/;function co(e,t,r){if(r){if(typeof t=="string"&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in r)if(ho.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof t=="string"?Object.assign({query:t},r):t,i=Object.keys(s).reduce((a,c)=>lo.includes(c)?(a[c]=s[c],a):(a.variables||(a.variables={}),a.variables[c]=s[c],a),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return It.test(n)&&(i.url=n.replace(It,"/api/graphql")),e(i).then(a=>{if(a.data.errors){const c={};for(const g of Object.keys(a.headers))c[g]=a.headers[g];throw new uo(i,c,a.data)}return a.data.data})}function Ne(e,t){const r=e.defaults(t);return Object.assign((i,n)=>co(r,i,n),{defaults:Ne.bind(null,r),endpoint:r.endpoint})}Ne(Re,{headers:{"user-agent":`octokit-graphql.js/${no} ${Se()}`},method:"POST",url:"/graphql"});function po(e){return Ne(e,{method:"POST",url:"/graphql"})}var go=/^v1\./,mo=/^ghs_/,fo=/^ghu_/;async function So(e){const t=e.split(/\./).length===3,r=go.test(e)||mo.test(e),s=fo.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}function bo(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function To(e,t,r,s){const i=t.endpoint.merge(r,s);return i.headers.authorization=bo(e),t(i)}var _o=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign(So.bind(null,t),{hook:To.bind(null,t)})};const Qt="6.1.2",vt=()=>{},Eo=console.warn.bind(console),yo=console.error.bind(console),Lt=`octokit-core.js/${Qt} ${Se()}`;var de;let wo=(de=class{constructor(t={}){G(this,"request");G(this,"graphql");G(this,"log");G(this,"hook");G(this,"auth");const r=new $r.Collection,s={baseUrl:Re.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=t.userAgent?`${t.userAgent} ${Lt}`:Lt,t.baseUrl&&(s.baseUrl=t.baseUrl),t.previews&&(s.mediaType.previews=t.previews),t.timeZone&&(s.headers["time-zone"]=t.timeZone),this.request=Re.defaults(s),this.graphql=po(this.request).defaults(s),this.log=Object.assign({debug:vt,info:vt,warn:Eo,error:yo},t.log),this.hook=r,t.authStrategy){const{authStrategy:n,...a}=t,c=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},t.auth));r.wrap("request",c.hook),this.auth=c}else if(!t.auth)this.auth=async()=>({type:"unauthenticated"});else{const n=_o(t.auth);r.wrap("request",n.hook),this.auth=n}const i=this.constructor;for(let n=0;n<i.plugins.length;++n)Object.assign(this,i.plugins[n](this,t))}static defaults(t){return class extends this{constructor(...s){const i=s[0]||{};if(typeof t=="function"){super(t(i));return}super(Object.assign({},t,i,i.userAgent&&t.userAgent?{userAgent:`${i.userAgent} ${t.userAgent}`}:null))}}}static plugin(...t){var i;const r=this.plugins;return i=class extends this{},G(i,"plugins",r.concat(t.filter(n=>!r.includes(n)))),i}},G(de,"VERSION",Qt),G(de,"plugins",[]),de);var Io="0.0.0-development";function vo(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,s=e.data.repository_selection,i=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const n=Object.keys(e.data)[0],a=e.data[n];return e.data=a,typeof r<"u"&&(e.data.incomplete_results=r),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=i,e}function He(e,t,r){const s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),i=typeof t=="function"?t:e.request,n=s.method,a=s.headers;let c=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!c)return{done:!0};try{const g=await i({method:n,url:c,headers:a}),f=vo(g);return c=((f.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:f}}catch(g){if(g.status!==409)throw g;return c="",{value:{status:200,headers:{},data:[]}}}}})}}function Jt(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),Xt(e,[],He(e,t,r)[Symbol.asyncIterator](),s)}function Xt(e,t,r,s){return r.next().then(i=>{if(i.done)return t;let n=!1;function a(){n=!0}return t=t.concat(s?s(i.value,a):i.value.data),n?t:Xt(e,t,r,s)})}Object.assign(Jt,{iterator:He});function Zt(e){return{paginate:Object.assign(Jt.bind(null,e),{iterator:He.bind(null,e)})}}Zt.VERSION=Io;var Lo=(e,t)=>`The cursor at "${e.join(",")}" did not change its value "${t}" after a page transition. Please make sure your that your query is set up correctly.`,ko=class extends Error{constructor(t,r){super(Lo(t.pathInQuery,r));G(this,"name","MissingCursorChangeError");this.pageInfo=t,this.cursorValue=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Wo=class extends Error{constructor(t){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(t,null,2)}`);G(this,"name","MissingPageInfo");this.response=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Po=e=>Object.prototype.toString.call(e)==="[object Object]";function er(e){const t=tr(e,"pageInfo");if(t.length===0)throw new Wo(e);return t}var tr=(e,t,r=[])=>{for(const s of Object.keys(e)){const i=[...r,s],n=e[s];if(Po(n)){if(n.hasOwnProperty(t))return i;const a=tr(n,t,i);if(a.length>0)return a}}return[]},he=(e,t)=>t.reduce((r,s)=>r[s],e),ke=(e,t,r)=>{const s=t[t.length-1],i=[...t].slice(0,-1),n=he(e,i);typeof r=="function"?n[s]=r(n[s]):n[s]=r},Co=e=>{const t=er(e);return{pathInQuery:t,pageInfo:he(e,[...t,"pageInfo"])}},rr=e=>e.hasOwnProperty("hasNextPage"),Go=e=>rr(e)?e.endCursor:e.startCursor,Oo=e=>rr(e)?e.hasNextPage:e.hasPreviousPage,or=e=>(t,r={})=>{let s=!0,i={...r};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const n=await e.graphql(t,i),a=Co(n),c=Go(a.pageInfo);if(s=Oo(a.pageInfo),s&&c===i.cursor)throw new ko(a,c);return i={...i,cursor:c},{done:!1,value:n}}})}},Ao=(e,t)=>{if(Object.keys(e).length===0)return Object.assign(e,t);const r=er(e),s=[...r,"nodes"],i=he(t,s);i&&ke(e,s,g=>[...g,...i]);const n=[...r,"edges"],a=he(t,n);a&&ke(e,n,g=>[...g,...a]);const c=[...r,"pageInfo"];return ke(e,c,he(t,c)),e},Ro=e=>{const t=or(e);return async(r,s={})=>{let i={};for await(const n of t(r,s))i=Ao(i,n);return i}};function Fo(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(Ro(e),{iterator:or(e)})})}}const Do="13.2.6",Bo={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var Uo=Bo;const Y=new Map;for(const[e,t]of Object.entries(Uo))for(const[r,s]of Object.entries(t)){const[i,n,a]=s,[c,g]=i.split(/ /),f=Object.assign({method:c,url:g},n);Y.has(e)||Y.set(e,new Map),Y.get(e).set(r,{scope:e,methodName:r,endpointDefaults:f,decorations:a})}const jo={has({scope:e},t){return Y.get(e).has(t)},getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,t,r){return Object.defineProperty(e.cache,t,r),!0},deleteProperty(e,t){return delete e.cache[t],!0},ownKeys({scope:e}){return[...Y.get(e).keys()]},set(e,t,r){return e.cache[t]=r},get({octokit:e,scope:t,cache:r},s){if(r[s])return r[s];const i=Y.get(t).get(s);if(!i)return;const{endpointDefaults:n,decorations:a}=i;return a?r[s]=$o(e,t,s,n,a):r[s]=e.request.defaults(n),r[s]}};function qo(e){const t={};for(const r of Y.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},jo);return t}function $o(e,t,r,s,i){const n=e.request.defaults(s);function a(...c){let g=n.endpoint.merge(...c);if(i.mapToData)return g=Object.assign({},g,{data:g[i.mapToData],[i.mapToData]:void 0}),n(g);if(i.renamed){const[f,T]=i.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${f}.${T}()`)}if(i.deprecated&&e.log.warn(i.deprecated),i.renamedParameters){const f=n.endpoint.merge(...c);for(const[T,b]of Object.entries(i.renamedParameters))T in f&&(e.log.warn(`"${T}" parameter is deprecated for "octokit.${t}.${r}()". Use "${b}" instead`),b in f||(f[b]=f[T]),delete f[T]);return n(f)}return n(...c)}return Object.assign(a,n)}function sr(e){return{rest:qo(e)}}sr.VERSION=Do;var We=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function No(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var ir={exports:{}};(function(e,t){(function(r,s){e.exports=s()})(We,function(){var r=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof We<"u"?We:typeof self<"u"?self:{};function s(y){return y&&y.default||y}var i=function(y,u,o={}){var l,h,p;for(l in u)p=u[l],o[l]=(h=y[l])!=null?h:p;return o},n=function(y,u,o={}){var l,h;for(l in y)h=y[l],u[l]!==void 0&&(o[l]=h);return o},a={load:i,overwrite:n},c;c=class{constructor(u,o){this.incr=u,this.decr=o,this._first=null,this._last=null,this.length=0}push(u){var o;this.length++,typeof this.incr=="function"&&this.incr(),o={value:u,prev:this._last,next:null},this._last!=null?(this._last.next=o,this._last=o):this._first=this._last=o}shift(){var u;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),u=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,u}first(){if(this._first!=null)return this._first.value}getArray(){var u,o,l;for(u=this._first,l=[];u!=null;)l.push((o=u,u=u.next,o.value));return l}forEachShift(u){var o;for(o=this.shift();o!=null;)u(o),o=this.shift()}debug(){var u,o,l,h,p;for(u=this._first,p=[];u!=null;)p.push((o=u,u=u.next,{value:o.value,prev:(l=o.prev)!=null?l.value:void 0,next:(h=o.next)!=null?h.value:void 0}));return p}};var g=c,f;f=class{constructor(u){if(this.instance=u,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(o,l)=>this._addListener(o,"many",l),this.instance.once=(o,l)=>this._addListener(o,"once",l),this.instance.removeAllListeners=(o=null)=>o!=null?delete this._events[o]:this._events={}}_addListener(u,o,l){var h;return(h=this._events)[u]==null&&(h[u]=[]),this._events[u].push({cb:l,status:o}),this.instance}listenerCount(u){return this._events[u]!=null?this._events[u].length:0}async trigger(u,...o){var l,h;try{return u!=="debug"&&this.trigger("debug",`Event triggered: ${u}`,o),this._events[u]==null?void 0:(this._events[u]=this._events[u].filter(function(p){return p.status!=="none"}),h=this._events[u].map(async p=>{var m,_;if(p.status!=="none"){p.status==="once"&&(p.status="none");try{return _=typeof p.cb=="function"?p.cb(...o):void 0,typeof(_!=null?_.then:void 0)=="function"?await _:_}catch(W){return m=W,this.trigger("error",m),null}}}),(await Promise.all(h)).find(function(p){return p!=null}))}catch(p){return l=p,this.trigger("error",l),null}}};var T=f,b,L,k;b=g,L=T,k=class{constructor(u){this.Events=new L(this),this._length=0,this._lists=(function(){var o,l,h;for(h=[],o=1,l=u;1<=l?o<=l:o>=l;1<=l?++o:--o)h.push(new b(()=>this.incr(),()=>this.decr()));return h}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(u){return this._lists[u.options.priority].push(u)}queued(u){return u!=null?this._lists[u].length:this._length}shiftAll(u){return this._lists.forEach(function(o){return o.forEachShift(u)})}getFirst(u=this._lists){var o,l,h;for(o=0,l=u.length;o<l;o++)if(h=u[o],h.length>0)return h;return[]}shiftLastFrom(u){return this.getFirst(this._lists.slice(u).reverse()).shift()}};var I=k,w;w=class extends Error{};var E=w,d,C,S,v,P;v=10,C=5,P=a,d=E,S=class{constructor(u,o,l,h,p,m,_,W){this.task=u,this.args=o,this.rejectOnDrop=p,this.Events=m,this._states=_,this.Promise=W,this.options=P.load(l,h),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===h.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((A,R)=>{this._resolve=A,this._reject=R}),this.retryCount=0}_sanitizePriority(u){var o;return o=~~u!==u?C:u,o<0?0:o>v-1?v-1:o}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:u,message:o="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(u??new d(o)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(u){var o;if(o=this._states.jobStatus(this.options.id),!(o===u||u==="DONE"&&o===null))throw new d(`Invalid job status ${o}, expected ${u}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(u,o){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:u,blocked:o})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(u,o,l,h){var p,m,_;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",m);try{if(_=await(u!=null?u.schedule(this.options,this.task,...this.args):this.task(...this.args)),o())return this.doDone(m),await h(this.options,m),this._assertStatus("DONE"),this._resolve(_)}catch(W){return p=W,this._onFailure(p,m,o,l,h)}}doExpire(u,o,l){var h,p;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),p={args:this.args,options:this.options,retryCount:this.retryCount},h=new d(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(h,p,u,o,l)}async _onFailure(u,o,l,h,p){var m,_;if(l())return m=await this.Events.trigger("failed",u,o),m!=null?(_=~~m,this.Events.trigger("retry",`Retrying ${this.options.id} after ${_} ms`,o),this.retryCount++,h(_)):(this.doDone(o),await p(this.options,o),this._assertStatus("DONE"),this._reject(u))}doDone(u){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",u)}};var j=S,J,be,Te;Te=a,J=E,be=class{constructor(u,o,l){this.instance=u,this.storeOptions=o,this.clientId=this.instance._randomIndex(),Te.load(l,l,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var u;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(u=this.heartbeat=setInterval(()=>{var o,l,h,p,m;if(p=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&p>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=p,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&p>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:o,reservoirIncreaseMaximum:h,reservoir:m}=this.storeOptions,this._lastReservoirIncrease=p,l=h!=null?Math.min(o,h-m):o,l>0))return this.storeOptions.reservoir+=l,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?u.unref():void 0:clearInterval(this.heartbeat)}async __publish__(u){return await this.yieldLoop(),this.instance.Events.trigger("message",u.toString())}async __disconnect__(u){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(u=0){return new this.Promise(function(o,l){return setTimeout(o,u)})}computePenalty(){var u;return(u=this.storeOptions.penalty)!=null?u:15*this.storeOptions.minTime||5e3}async __updateSettings__(u){return await this.yieldLoop(),Te.overwrite(u,u,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(u){return await this.yieldLoop(),this._nextRequest+this.timeout<u}computeCapacity(){var u,o;return{maxConcurrent:u,reservoir:o}=this.storeOptions,u!=null&&o!=null?Math.min(u-this._running,o):u!=null?u-this._running:o??null}conditionsCheck(u){var o;return o=this.computeCapacity(),o==null||u<=o}async __incrementReservoir__(u){var o;return await this.yieldLoop(),o=this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity()),o}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(u){return this._unblockTime>=u}check(u,o){return this.conditionsCheck(u)&&this._nextRequest-o<=0}async __check__(u){var o;return await this.yieldLoop(),o=Date.now(),this.check(u,o)}async __register__(u,o,l){var h,p;return await this.yieldLoop(),h=Date.now(),this.conditionsCheck(o)?(this._running+=o,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=o),p=Math.max(this._nextRequest-h,0),this._nextRequest=h+p+this.storeOptions.minTime,{success:!0,wait:p,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(u,o){var l,h,p;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&o>this.storeOptions.maxConcurrent)throw new J(`Impossible to add a job having a weight of ${o} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return h=Date.now(),p=this.storeOptions.highWater!=null&&u===this.storeOptions.highWater&&!this.check(o,h),l=this.strategyIsBlock()&&(p||this.isBlocked(h)),l&&(this._unblockTime=h+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:p,blocked:l,strategy:this.storeOptions.strategy}}async __free__(u,o){return await this.yieldLoop(),this._running-=o,this._done+=o,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var hr=be,Me,Ve;Me=E,Ve=class{constructor(u){this.status=u,this._jobs={},this.counts=this.status.map(function(){return 0})}next(u){var o,l;if(o=this._jobs[u],l=o+1,o!=null&&l<this.status.length)return this.counts[o]--,this.counts[l]++,this._jobs[u]++;if(o!=null)return this.counts[o]--,delete this._jobs[u]}start(u){var o;return o=0,this._jobs[u]=o,this.counts[o]++}remove(u){var o;return o=this._jobs[u],o!=null&&(this.counts[o]--,delete this._jobs[u]),o!=null}jobStatus(u){var o;return(o=this.status[this._jobs[u]])!=null?o:null}statusJobs(u){var o,l,h,p,m;if(u!=null){if(l=this.status.indexOf(u),l<0)throw new Me(`status must be one of ${this.status.join(", ")}`);h=this._jobs,p=[];for(o in h)m=h[o],m===l&&p.push(o);return p}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((u,o,l)=>(u[this.status[l]]=o,u),{})}};var cr=Ve,ze,Ke;ze=g,Ke=class{constructor(u,o){this.schedule=this.schedule.bind(this),this.name=u,this.Promise=o,this._running=0,this._queue=new ze}isEmpty(){return this._queue.length===0}async _tryToRun(){var u,o,l,h,p,m,_;if(this._running<1&&this._queue.length>0)return this._running++,{task:_,args:u,resolve:p,reject:h}=this._queue.shift(),o=await async function(){try{return m=await _(...u),function(){return p(m)}}catch(W){return l=W,function(){return h(l)}}}(),this._running--,this._tryToRun(),o()}schedule(u,...o){var l,h,p;return p=h=null,l=new this.Promise(function(m,_){return p=m,h=_}),this._queue.push({task:u,args:o,resolve:p,reject:h}),this._tryToRun(),l}};var pr=Ke,Ye="2.19.5",gr={version:Ye},mr=Object.freeze({version:Ye,default:gr}),Qe=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Je=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),dr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Xe,Ze,et,tt,rt,ge;ge=a,Xe=T,tt=Qe,et=Je,rt=dr,Ze=(function(){class y{constructor(o={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=o,ge.load(this.limiterOptions,this.defaults,this),this.Events=new Xe(this),this.instances={},this.Bottleneck=gt,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new tt(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new et(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(o=""){var l;return(l=this.instances[o])!=null?l:(()=>{var h;return h=this.instances[o]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${o}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",h,o),h})()}async deleteKey(o=""){var l,h;return h=this.instances[o],this.connection&&(l=await this.connection.__runCommand__(["del",...rt.allKeys(`${this.id}-${o}`)])),h!=null&&(delete this.instances[o],await h.disconnect()),h!=null||l>0}limiters(){var o,l,h,p;l=this.instances,h=[];for(o in l)p=l[o],h.push({key:o,limiter:p});return h}keys(){return Object.keys(this.instances)}async clusterKeys(){var o,l,h,p,m,_,W,A,R;if(this.connection==null)return this.Promise.resolve(this.keys());for(_=[],o=null,R=`b_${this.id}-`.length,l=9;o!==0;)for([A,h]=await this.connection.__runCommand__(["scan",o??0,"match",`b_${this.id}-*_settings`,"count",1e4]),o=~~A,p=0,W=h.length;p<W;p++)m=h[p],_.push(m.slice(R,-l));return _}_startAutoCleanup(){var o;return clearInterval(this.interval),typeof(o=this.interval=setInterval(async()=>{var l,h,p,m,_,W;_=Date.now(),p=this.instances,m=[];for(h in p){W=p[h];try{await W._store.__groupCheck__(_)?m.push(this.deleteKey(h)):m.push(void 0)}catch(A){l=A,m.push(W.Events.trigger("error",l))}}return m},this.timeout/2)).unref=="function"?o.unref():void 0}updateSettings(o={}){if(ge.overwrite(o,this.defaults,this),ge.overwrite(o,o,this.limiterOptions),o.timeout!=null)return this._startAutoCleanup()}disconnect(o=!0){var l;if(!this.sharedConnection)return(l=this.connection)!=null?l.disconnect(o):void 0}}return y.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},y}).call(r);var fr=Ze,ot,st,it;it=a,st=T,ot=(function(){class y{constructor(o={}){this.options=o,it.load(this.options,this.defaults,this),this.Events=new st(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((o,l)=>this._resolve=o)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(o){var l;return this._arr.push(o),l=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),l}}return y.prototype.defaults={maxTime:null,maxSize:null,Promise},y}).call(r);var Sr=ot,br=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Tr=s(mr),nt,at,_e,Ee,ut,ye,lt,ht,ct,we,$,pt=[].splice;ye=10,at=5,$=a,lt=I,Ee=j,ut=hr,ht=br,_e=T,ct=cr,we=pr,nt=(function(){class y{constructor(o={},...l){var h,p;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(o,l),$.load(o,this.instanceDefaults,this),this._queues=new lt(ye),this._scheduled={},this._states=new ct(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new _e(this),this._submitLock=new we("submit",this.Promise),this._registerLock=new we("register",this.Promise),p=$.load(o,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return h=$.load(o,this.redisStoreDefaults,{}),new ht(this,p,h);if(this.datastore==="local")return h=$.load(o,this.localStoreDefaults,{}),new ut(this,p,h);throw new y.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var m;return(m=this._store.heartbeat)!=null&&typeof m.ref=="function"?m.ref():void 0}),this._queues.on("zero",()=>{var m;return(m=this._store.heartbeat)!=null&&typeof m.unref=="function"?m.unref():void 0})}_validateOptions(o,l){if(!(o!=null&&typeof o=="object"&&l.length===0))throw new y.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(o){return this._store.__publish__(o)}disconnect(o=!0){return this._store.__disconnect__(o)}chain(o){return this._limiter=o,this}queued(o){return this._queues.queued(o)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(o){return this._states.jobStatus(o)}jobs(o){return this._states.statusJobs(o)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(o=1){return this._store.__check__(o)}_clearGlobalState(o){return this._scheduled[o]!=null?(clearTimeout(this._scheduled[o].expiration),delete this._scheduled[o],!0):!1}async _free(o,l,h,p){var m,_;try{if({running:_}=await this._store.__free__(o,h.weight),this.Events.trigger("debug",`Freed ${h.id}`,p),_===0&&this.empty())return this.Events.trigger("idle")}catch(W){return m=W,this.Events.trigger("error",m)}}_run(o,l,h){var p,m,_;return l.doRun(),p=this._clearGlobalState.bind(this,o),_=this._run.bind(this,o,l),m=this._free.bind(this,o,l),this._scheduled[o]={timeout:setTimeout(()=>l.doExecute(this._limiter,p,_,m),h),expiration:l.options.expiration!=null?setTimeout(function(){return l.doExpire(p,_,m)},h+l.options.expiration):void 0,job:l}}_drainOne(o){return this._registerLock.schedule(()=>{var l,h,p,m,_;return this.queued()===0?this.Promise.resolve(null):(_=this._queues.getFirst(),{options:m,args:l}=p=_.first(),o!=null&&m.weight>o?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${m.id}`,{args:l,options:m}),h=this._randomIndex(),this._store.__register__(h,m.weight,m.expiration).then(({success:W,wait:A,reservoir:R})=>{var ne;return this.Events.trigger("debug",`Drained ${m.id}`,{success:W,args:l,options:m}),W?(_.shift(),ne=this.empty(),ne&&this.Events.trigger("empty"),R===0&&this.Events.trigger("depleted",ne),this._run(h,p,A),this.Promise.resolve(m.weight)):this.Promise.resolve(null)})))})}_drainAll(o,l=0){return this._drainOne(o).then(h=>{var p;return h!=null?(p=o!=null?o-h:o,this._drainAll(p,l+h)):this.Promise.resolve(l)}).catch(h=>this.Events.trigger("error",h))}_dropAllQueued(o){return this._queues.shiftAll(function(l){return l.doDrop({message:o})})}stop(o={}){var l,h;return o=$.load(o,this.stopDefaults),h=p=>{var m;return m=()=>{var _;return _=this._states.counts,_[0]+_[1]+_[2]+_[3]===p},new this.Promise((_,W)=>m()?_():this.on("done",()=>{if(m())return this.removeAllListeners("done"),_()}))},l=o.dropWaitingJobs?(this._run=function(p,m){return m.doDrop({message:o.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var p,m,_;m=this._scheduled;for(p in m)_=m[p],this.jobStatus(_.job.options.id)==="RUNNING"&&(clearTimeout(_.timeout),clearTimeout(_.expiration),_.job.doDrop({message:o.dropErrorMessage}));return this._dropAllQueued(o.dropErrorMessage),h(0)}))):this.schedule({priority:ye-1,weight:0},()=>h(1)),this._receive=function(p){return p._reject(new y.prototype.BottleneckError(o.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new y.prototype.BottleneckError("stop() has already been called")),l}async _addToQueue(o){var l,h,p,m,_,W,A;({args:l,options:m}=o);try{({reachedHWM:_,blocked:h,strategy:A}=await this._store.__submit__(this.queued(),m.weight))}catch(R){return p=R,this.Events.trigger("debug",`Could not queue ${m.id}`,{args:l,options:m,error:p}),o.doDrop({error:p}),!1}return h?(o.doDrop(),!0):_&&(W=A===y.prototype.strategy.LEAK?this._queues.shiftLastFrom(m.priority):A===y.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(m.priority+1):A===y.prototype.strategy.OVERFLOW?o:void 0,W!=null&&W.doDrop(),W==null||A===y.prototype.strategy.OVERFLOW)?(W==null&&o.doDrop(),_):(o.doQueue(_,h),this._queues.push(o),await this._drainAll(),_)}_receive(o){return this._states.jobStatus(o.options.id)!=null?(o._reject(new y.prototype.BottleneckError(`A job with the same id already exists (id=${o.options.id})`)),!1):(o.doReceive(),this._submitLock.schedule(this._addToQueue,o))}submit(...o){var l,h,p,m,_,W,A;return typeof o[0]=="function"?(_=o,[h,...o]=_,[l]=pt.call(o,-1),m=$.load({},this.jobDefaults)):(W=o,[m,h,...o]=W,[l]=pt.call(o,-1),m=$.load(m,this.jobDefaults)),A=(...R)=>new this.Promise(function(ne,Er){return h(...R,function(...mt){return(mt[0]!=null?Er:ne)(mt)})}),p=new Ee(A,o,m,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),p.promise.then(function(R){return typeof l=="function"?l(...R):void 0}).catch(function(R){return Array.isArray(R)?typeof l=="function"?l(...R):void 0:typeof l=="function"?l(R):void 0}),this._receive(p)}schedule(...o){var l,h,p;return typeof o[0]=="function"?([p,...o]=o,h={}):[h,p,...o]=o,l=new Ee(p,o,h,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(l),l.promise}wrap(o){var l,h;return l=this.schedule.bind(this),h=function(...p){return l(o.bind(this),...p)},h.withOptions=function(p,...m){return l(p,o,...m)},h}async updateSettings(o={}){return await this._store.__updateSettings__($.overwrite(o,this.storeDefaults)),$.overwrite(o,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(o=0){return this._store.__incrementReservoir__(o)}}return y.default=y,y.Events=_e,y.version=y.prototype.version=Tr.version,y.strategy=y.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},y.BottleneckError=y.prototype.BottleneckError=E,y.Group=y.prototype.Group=fr,y.RedisConnection=y.prototype.RedisConnection=Qe,y.IORedisConnection=y.prototype.IORedisConnection=Je,y.Batcher=y.prototype.Batcher=Sr,y.prototype.jobDefaults={priority:at,weight:1,expiration:null,id:"<no-id>"},y.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:y.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},y.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},y.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},y.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},y.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},y}).call(r);var gt=nt,_r=gt;return _r})})(ir);var Ho=ir.exports;const nr=No(Ho);var xo="0.0.0-development";async function ar(e,t,r,s){if(!r.request||!r.request.request)throw r;if(r.status>=400&&!e.doNotRetry.includes(r.status)){const i=s.request.retries!=null?s.request.retries:e.retries,n=Math.pow((s.request.retryCount||0)+1,2);throw t.retry.retryRequest(r,i,n)}throw r}async function Mo(e,t,r,s){const i=new nr;return i.on("failed",function(n,a){const c=~~n.request.request.retries,g=~~n.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,c>a.retryCount)return g*e.retryAfterBaseValue}),i.schedule(Vo.bind(null,e,t,r),s)}async function Vo(e,t,r,s){const i=await r(r,s);if(i.data&&i.data.errors&&i.data.errors.length>0&&/Something went wrong while executing your query/.test(i.data.errors[0].message)){const n=new ue(i.data.errors[0].message,500,{request:s,response:i});return ar(e,t,n,s)}return i}function ur(e,t){const r=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},t.retry);return r.enabled&&(e.hook.error("request",ar.bind(null,r,e)),e.hook.wrap("request",Mo.bind(null,r,e))),{retry:{retryRequest:(s,i,n)=>(s.request.request=Object.assign({},s.request.request,{retries:i,retryAfter:n}),s)}}}ur.VERSION=xo;var zo="0.0.0-development",Pe=()=>Promise.resolve();function Ko(e,t,r){return e.retryLimiter.schedule(Yo,e,t,r)}async function Yo(e,t,r){const s=r.method!=="GET"&&r.method!=="HEAD",{pathname:i}=new URL(r.url,"http://github.test"),n=r.method==="GET"&&i.startsWith("/search/"),a=i.startsWith("/graphql"),g=~~t.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(g.expiration=1e3*60),(s||a)&&await e.write.key(e.id).schedule(g,Pe),s&&e.triggersNotification(i)&&await e.notifications.key(e.id).schedule(g,Pe),n&&await e.search.key(e.id).schedule(g,Pe);const f=e.global.key(e.id).schedule(g,t,r);if(a){const T=await f;if(T.data.errors!=null&&T.data.errors.some(b=>b.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:T,data:T.data})}return f}var Qo=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Jo(e){const r=`^(?:${e.map(s=>s.split("/").map(i=>i.startsWith("{")?"(?:.+?)":i).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(r,"i")}var kt=Jo(Qo),lr=kt.test.bind(kt),oe={},Xo=function(e,t){oe.global=new e.Group({id:"octokit-global",maxConcurrent:10,...t}),oe.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...t}),oe.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...t}),oe.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...t})};function xe(e,t){const{enabled:r=!0,Bottleneck:s=nr,id:i="no-id",timeout:n=1e3*60*2,connection:a}=t.throttle||{};if(!r)return{};const c={timeout:n};typeof a<"u"&&(c.connection=a),oe.global==null&&Xo(s,c);const g=Object.assign({clustering:a!=null,triggersNotification:lr,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:i,...oe},t.throttle);if(typeof g.onSecondaryRateLimit!="function"||typeof g.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const f={},T=new s.Events(f);return f.on("secondary-limit",g.onSecondaryRateLimit),f.on("rate-limit",g.onRateLimit),f.on("error",b=>e.log.warn("Error in throttling-plugin limit handler",b)),g.retryLimiter.on("failed",async function(b,L){const[k,I,w]=L.args,{pathname:E}=new URL(w.url,"http://github.test");if(!(E.startsWith("/graphql")&&b.status!==401||b.status===403||b.status===429))return;const C=~~I.retryCount;I.retryCount=C,w.request.retryCount=C;const{wantRetry:S,retryAfter:v=0}=await async function(){var P;if(/\bsecondary rate\b/i.test(b.message)){const j=Number(b.response.headers["retry-after"])||k.fallbackSecondaryRateRetryAfter;return{wantRetry:await T.trigger("secondary-limit",j,w,e,C),retryAfter:j}}if(b.response.headers!=null&&b.response.headers["x-ratelimit-remaining"]==="0"||(((P=b.response.data)==null?void 0:P.errors)??[]).some(j=>j.type==="RATE_LIMITED")){const j=new Date(~~b.response.headers["x-ratelimit-reset"]*1e3).getTime(),J=Math.max(Math.ceil((j-Date.now())/1e3)+1,0);return{wantRetry:await T.trigger("rate-limit",J,w,e,C),retryAfter:J}}return{}}();if(S)return I.retryCount++,v*k.retryAfterBaseValue}),e.hook.wrap("request",Ko.bind(null,g)),{}}xe.VERSION=zo;xe.triggersNotification=lr;var Zo="0.0.0-development",Wt=wo.plugin(sr,Zt,Fo,ur,xe).defaults({userAgent:`octokit.js/${Zo}`,throttle:{onRateLimit:es,onSecondaryRateLimit:ts}});function es(e,t,r){if(r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}function ts(e,t,r){if(r.log.warn(`SecondaryRateLimit detected for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}const Pt=[{name:"Awakening",nameSlug:"awakening",darkColor:"#3f5471",lightColor:"#c7d5c6",characters:[{name:"Female Robin",nameSlug:"female_robin",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Fallen",outfitSlug:"fallen",secondaryShape:"🟣"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Night",outfitSlug:"night"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Brave",outfitSlug:"brave"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Dark",outfitSlug:"dark"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Devoted",outfitSlug:"devoted",secondaryShape:"🟣"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Harvest",outfitSlug:"harvest"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer"}]},{name:"Emmeryn",nameSlug:"emmeryn",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Sully",nameSlug:"sully",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Sumia",nameSlug:"sumia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Maribelle",nameSlug:"maribelle",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Miriel",nameSlug:"miriel",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Cordelia",nameSlug:"cordelia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Armored",outfitSlug:"armored"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍐"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Bride",outfitSlug:"bride"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍐"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Winter",outfitSlug:"winter",secondaryShape:"🍎"}]},{name:"Phila",nameSlug:"phila",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Flavia",nameSlug:"flavia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🍎"}]},{name:"Olivia",nameSlug:"olivia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"💎",outfit:"Night",outfitSlug:"night"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍎"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"🍎"}]},{name:"Tharja",nameSlug:"tharja",heightInCm:160,initialRoaster:!0,outfits:[{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"⌛"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring",secondaryShape:"💎"},{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🍐"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Winter",outfitSlug:"winter",secondaryShape:"🟣"}]},{name:"Aversa",nameSlug:"aversa",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"⌛"}]},{name:"Say'ri",nameSlug:"sayri",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🍐"}]},{name:"Cherche",nameSlug:"cherche",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Ninja",outfitSlug:"ninja"}]},{name:"Adult Tiki",nameSlug:"adult_tiki",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Brides",outfitSlug:"brides",secondaryShape:"⌛"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🍎"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Brave",outfitSlug:"brave"}]},{name:"Panne",nameSlug:"panne",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"New Year",outfitSlug:"new_year"}]},{name:"Awakening Anna",nameSlug:"awakening_anna",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Harvest",outfitSlug:"harvest"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Bride",outfitSlug:"bride"}]},{name:"Lucina",nameSlug:"lucina",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Persona",outfitSlug:"persona"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Armored",outfitSlug:"armored",secondaryShape:"🍎"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Brave",outfitSlug:"brave",secondaryShape:"🟣"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Ascended",outfitSlug:"ascended"},{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Legendary",outfitSlug:"legendary"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Devoted",outfitSlug:"devoted",secondaryShape:"🍎"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🟣"}]},{name:"Naga",nameSlug:"naga",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Harvest",outfitSlug:"harvest",secondaryShape:"🟣"}]},{name:"Kjelle",nameSlug:"kjelle",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Cynthia",nameSlug:"cynthia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Severa",nameSlug:"severa",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Spring",outfitSlug:"spring"}]},{name:"Noire",nameSlug:"noire",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"}]},{name:"Lissa",nameSlug:"lissa",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Devoted",outfitSlug:"devoted",secondaryShape:"🍎"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Winter",outfitSlug:"winter",secondaryShape:"🟣"}]}]},{name:"Binding Blade",nameSlug:"binding_blade",darkColor:"#49607c",lightColor:"#e7e2ce",characters:[{name:"Gwendolyn",nameSlug:"gwendolyn",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Cecilia",nameSlug:"cecilia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"💎"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Bride",outfitSlug:"bride"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Winter",outfitSlug:"winter",secondaryShape:"🟣"}]},{name:"Brunnya",nameSlug:"brunnya",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"💎",secondaryShape:"⌛",outfit:"Base",outfitSlug:"base"}]},{name:"Guinivere",nameSlug:"guinivere",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:550,mainShape:"🍎",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"💎"}]},{name:"Melady",nameSlug:"melady",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Echidna",nameSlug:"echidna",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Igrene",nameSlug:"igrene",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🟣",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Ninja",outfitSlug:"ninja"}]},{name:"Idunn",nameSlug:"idunn",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Ascended",outfitSlug:"ascended"},{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍐"},{outfitWeightThresholdInLb:550,mainShape:"⌛",outfit:"Harvest",outfitSlug:"harvest",secondaryShape:"🍐"}]},{name:"Elimine",nameSlug:"elimine",heightInCm:160,outfits:[{outfitWeightThresholdInLb:600,mainShape:"💎",secondaryShape:"⌛",outfit:"Base",outfitSlug:"base"}]},{name:"Juno",nameSlug:"juno",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Bride",outfitSlug:"bride"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"⌛"}]}]},{name:"Blazing Sword",nameSlug:"blazing_sword",darkColor:"#5e9a3a",lightColor:"#fef76f",characters:[{name:"Lyn",nameSlug:"lyn",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Armored",outfitSlug:"armored"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Brave",outfitSlug:"brave",secondaryShape:"⌛"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🍎"},{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Devoted",outfitSlug:"devoted",secondaryShape:"💎"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Bride",outfitSlug:"bride"},{outfitWeightThresholdInLb:200,mainShape:"🟣",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍐"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Flame Tribe",outfitSlug:"flame_tribe"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Ninja",outfitSlug:"ninja",secondaryShape:"⌛"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Legendary",outfitSlug:"legendary",secondaryShape:"🍐"}]},{name:"Isadora",nameSlug:"isadora",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Leila",nameSlug:"leila",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Thief",outfitSlug:"thief"}]},{name:"Louise",nameSlug:"louise",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"💎"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Bride",outfitSlug:"bride"}]},{name:"Fiora",nameSlug:"fiora",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍎"}]},{name:"Karla",nameSlug:"karla",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Dark",outfitSlug:"dark",secondaryShape:"🟣"},{outfitWeightThresholdInLb:200,mainShape:"💎",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"🍎"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Spring",outfitSlug:"spring",secondaryShape:"💎"}]},{name:"Limstella",nameSlug:"limstella",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Sonia",nameSlug:"sonia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"⌛",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Ursula",nameSlug:"ursula",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"⌛",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:200,mainShape:"🍐",outfit:"Fallen",outfitSlug:"fallen"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:200,mainShape:"🟣",outfit:"Summer",outfitSlug:"summer",secondaryShape:"⌛"},{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Dark",outfitSlug:"dark"}]}]},{name:"Echoes",nameSlug:"echoes",darkColor:"#3a9073",lightColor:"#b9f3c8",characters:[{name:"Silque",nameSlug:"silque",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍐",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Devoted",outfitSlug:"devoted"}]},{name:"Clair",nameSlug:"clair",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Faye",nameSlug:"faye",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Valentine",outfitSlug:"valentine"},{outfitWeightThresholdInLb:450,mainShape:"🟣",outfit:"Embla",outfitSlug:"embla",secondaryShape:"🍐"}]},{name:"Mathilda",nameSlug:"mathilda",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Sonya",nameSlug:"sonya",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Beautiful Mage",outfitSlug:"beautiful_mage"},{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Muspelt",outfitSlug:"muspelt",secondaryShape:"🍎"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Spring",outfitSlug:"spring",secondaryShape:"💎"}]},{name:"Tatiana",nameSlug:"tatiana",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Mila",nameSlug:"mila",heightInCm:160,outfits:[{outfitWeightThresholdInLb:700,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Marla",nameSlug:"marla",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Base",outfitSlug:"base"}]},{name:"Hestia",nameSlug:"hestia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Rinea",nameSlug:"rinea",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Ballroom",outfitSlug:"ballroom"}]}]},{name:"Engage",nameSlug:"engage",darkColor:"#5937c7",lightColor:"#fe8aff",characters:[{name:"Female Alear",nameSlug:"female_alear",heightInCm:165,outfits:[{outfitWeightThresholdInLb:300,mainShape:"💎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Ascended",outfitSlug:"ascended"}]},{name:"Lumera",nameSlug:"lumera",heightInCm:177,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",secondaryShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"⌛"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Fallen",outfitSlug:"fallen",secondaryShape:"💎"}]},{name:"Chloé",nameSlug:"chloe",heightInCm:167,outfits:[{outfitWeightThresholdInLb:250,mainShape:"⌛",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Spring",outfitSlug:"spring"}]},{name:"Lapis",nameSlug:"lapis",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🟣"}]},{name:"Citrinne",nameSlug:"citrinne",heightInCm:163,outfits:[{outfitWeightThresholdInLb:600,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Ivy",nameSlug:"ivy",heightInCm:172,outfits:[{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Summer",outfitSlug:"summer",secondaryShape:"⌛"}]},{name:"Timerra",nameSlug:"timerra",heightInCm:159,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Harvest",outfitSlug:"harvest",secondaryShape:"🍎"}]},{name:"Merrin",nameSlug:"merrin",heightInCm:173,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Panette",nameSlug:"panette",heightInCm:164,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Zephia",nameSlug:"zephia",heightInCm:177,outfits:[{outfitWeightThresholdInLb:600,mainShape:"⌛",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Nel",nameSlug:"nel",heightInCm:175,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🟣"}]},{name:"Goldmary",nameSlug:"goldmary",heightInCm:173,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"}]},{name:"Etie",nameSlug:"etie",heightInCm:154,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Yunaka",nameSlug:"yunaka",heightInCm:164,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Christmas",outfitSlug:"christmas",secondaryShape:"🍎"}]},{name:"Céline",nameSlug:"celine",heightInCm:155,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]}]},{name:"Fates",nameSlug:"fates",darkColor:"#895ea9",lightColor:"#ffe2eb",characters:[{name:"Female Corrin",nameSlug:"female_corrin",heightInCm:165,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Fallen",outfitSlug:"fallen",secondaryShape:"🍐"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"⌛"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Night",outfitSlug:"night",secondaryShape:"🍐"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Legendary",outfitSlug:"legendary",secondaryShape:"🍎"},{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"💎"},{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Harvest",outfitSlug:"harvest",secondaryShape:"⌛"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Ninja",outfitSlug:"ninja"}]},{name:"Azura",nameSlug:"azura",heightInCm:168,outfits:[{outfitWeightThresholdInLb:200,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"💎"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Legendary",outfitSlug:"legendary",secondaryShape:"🍐"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"New Year",outfitSlug:"new_year"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"🍎"},{outfitWeightThresholdInLb:200,mainShape:"🍎",outfit:"Night",outfitSlug:"night"}]},{name:"Felicia",nameSlug:"felicia",heightInCm:158,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Picnic",outfitSlug:"picnic"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Winter",outfitSlug:"winter"}]},{name:"Mikoto",nameSlug:"mikoto",heightInCm:170,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Kagero",nameSlug:"kagero",heightInCm:165,outfits:[{outfitWeightThresholdInLb:200,mainShape:"⌛",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"💎",outfit:"Harvest",outfitSlug:"harvest"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Thief",outfitSlug:"thief",secondaryShape:"🍐"},{outfitWeightThresholdInLb:400,mainShape:"⌛",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"💎"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring",secondaryShape:"⌛"}]},{name:"Hinoka",nameSlug:"hinoka",heightInCm:170,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Ascended",outfitSlug:"ascended"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Legendary",outfitSlug:"legendary"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Hot Spring",outfitSlug:"hot_spring",secondaryShape:"🍐"},{outfitWeightThresholdInLb:200,mainShape:"🟣",outfit:"Pirate",outfitSlug:"pirate",secondaryShape:"🍎"}]},{name:"Setsuna",nameSlug:"setsuna",heightInCm:163,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Oboro",nameSlug:"oboro",heightInCm:163,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Bride",outfitSlug:"bride"}]},{name:"Orochi",nameSlug:"orochi",heightInCm:167,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🍎",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Dancer",outfitSlug:"dancer"}]},{name:"Rinkah",nameSlug:"rinkah",heightInCm:161,initialRoaster:!0,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Flame Tribe",outfitSlug:"flame_tribe",secondaryShape:"🍎"}]},{name:"Peri",nameSlug:"peri",heightInCm:163,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Camilla",nameSlug:"camilla",heightInCm:178,outfits:[{outfitWeightThresholdInLb:250,mainShape:"💎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Dream",outfitSlug:"dream"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Dark",outfitSlug:"dark"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"🍐"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"⌛"},{outfitWeightThresholdInLb:250,mainShape:"💎",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"⌛"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Hot Spring",outfitSlug:"hot_spring"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍎"},{outfitWeightThresholdInLb:450,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Pirate",outfitSlug:"pirate"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Ninja",outfitSlug:"ninja",secondaryShape:"🍐"}]},{name:"Selena",nameSlug:"selena",heightInCm:158,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Winter",outfitSlug:"winter"}]},{name:"Effie",nameSlug:"effie",heightInCm:172,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🍎",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Devoted",outfitSlug:"devoted"}]},{name:"Charlotte",nameSlug:"charlotte",heightInCm:161,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Bride",outfitSlug:"bride"}]},{name:"Flora",nameSlug:"flora",heightInCm:181,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Picnic",outfitSlug:"picnic",secondaryShape:"🍐"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Ice Tribe",outfitSlug:"ice_tribe",secondaryShape:"⌛"}]},{name:"Candace",nameSlug:"candace",heightInCm:165,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Arete",nameSlug:"arete",heightInCm:175,outfits:[{outfitWeightThresholdInLb:600,mainShape:"💎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Reina",nameSlug:"reina",heightInCm:170,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Ninja",outfitSlug:"ninja"}]}]},{name:"Heroes",nameSlug:"heroes",darkColor:"#1e7fc7",lightColor:"#5deeff",characters:[{name:"Anna",nameSlug:"anna",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"New Year",outfitSlug:"new_year"}]},{name:"Henriette",nameSlug:"henriette",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"⌛",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Devoted",outfitSlug:"devoted"}]},{name:"Ash",nameSlug:"ash",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"🟣",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"🍎"}]},{name:"Letizia",nameSlug:"letizia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Fallen",outfitSlug:"fallen"}]},{name:"Embla",nameSlug:"embla",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"⌛",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"New Year",outfitSlug:"new_year"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🍐"}]},{name:"Nifl",nameSlug:"nifl",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍐",secondaryShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Ice Tribe",outfitSlug:"ice_tribe",secondaryShape:"💎"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer"}]},{name:"Fjorm",nameSlug:"fjorm",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Winter",outfitSlug:"winter",secondaryShape:"🍐"},{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"New Year",outfitSlug:"new_year"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Bride",outfitSlug:"bride"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Ice Tribe",outfitSlug:"ice_tribe"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Ninja",outfitSlug:"ninja",secondaryShape:"🟣"}]},{name:"Gunnthra",nameSlug:"gunnthra",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"🍎"},{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"}]},{name:"Laegjarn",nameSlug:"laegjarn",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Flame Ascendant",outfitSlug:"flame_ascendant",secondaryShape:"⌛"},{outfitWeightThresholdInLb:400,mainShape:"⌛",outfit:"Summer",outfitSlug:"summer"},{outfitWeightThresholdInLb:250,mainShape:"💎",outfit:"New Year",outfitSlug:"new_year"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Ninja",outfitSlug:"ninja",secondaryShape:"⌛"}]},{name:"Hel",nameSlug:"hel",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Thrasir",nameSlug:"thrasir",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"⌛",outfit:"Devoted",outfitSlug:"devoted"}]},{name:"Ganglot",nameSlug:"ganglot",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Eir",nameSlug:"eir",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Ascendant",outfitSlug:"ascendant",secondaryShape:"🍐"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"New Year",outfitSlug:"new_year"},{outfitWeightThresholdInLb:450,mainShape:"🟣",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍐"}]},{name:"Ymir",nameSlug:"ymir",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"}]},{name:"Peony",nameSlug:"peony",heightInCm:160,outfits:[{outfitWeightThresholdInLb:200,mainShape:"🍐",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Cherished Dream",outfitSlug:"dream",secondaryShape:"🍎"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"🍎"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Flame Tribe",outfitSlug:"flame_tribe",secondaryShape:"⌛"}]},{name:"Mirabilis",nameSlug:"mirabilis",heightInCm:160,outfits:[{outfitWeightThresholdInLb:200,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Winter",outfitSlug:"winter"},{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Spring",outfitSlug:"spring"}]},{name:"Triandra",nameSlug:"triandra",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",secondaryShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Dream",outfitSlug:"dream"},{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"🟣"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍐"}]},{name:"Plumeria",nameSlug:"plumeria",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Dream",outfitSlug:"dream",secondaryShape:"🍎"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"New Year",outfitSlug:"new_year"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍎"}]},{name:"Freyja",nameSlug:"freyja",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍐"}]},{name:"Eitr ",nameSlug:"eitr",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",secondaryShape:"⌛",outfit:"Base",outfitSlug:"base"}]},{name:"Ginnungagap",nameSlug:"ginnungagap",heightInCm:160,outfits:[{outfitWeightThresholdInLb:600,mainShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Reginn",nameSlug:"reginn",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Ascended",outfitSlug:"ascended"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"🟣"}]},{name:"Thjazi",nameSlug:"thjazi",heightInCm:160,outfits:[{outfitWeightThresholdInLb:600,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Dagr",nameSlug:"dagr",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"New Year",outfitSlug:"new_year"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Dancer",outfitSlug:"dancer"}]},{name:"Nott",nameSlug:"nott",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"⌛",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"New Year",outfitSlug:"new_year"}]},{name:"Seior",nameSlug:"seior",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"🟣"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer"}]},{name:"Gullveig",nameSlug:"gullveig",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"},{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Brave",outfitSlug:"brave",secondaryShape:"💎"}]},{name:"Kvasir",nameSlug:"kvasir",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"⌛",outfit:"New Year",outfitSlug:"new_year"}]},{name:"Heior",nameSlug:"heior",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"New Year",outfitSlug:"new_year"}]},{name:"Nerpuz",nameSlug:"nerpuz",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"⌛",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"},{outfitWeightThresholdInLb:600,mainShape:"⌛",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"⌛"}]},{name:"Ratatoskr",nameSlug:"ratatoskr",heightInCm:160,outfits:[{outfitWeightThresholdInLb:550,mainShape:"🟣",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Hraesvelgr",nameSlug:"hraesvelgr",heightInCm:160,outfits:[{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Niohoggr",nameSlug:"niohoggr",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Heiorun",nameSlug:"heiorun",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Loki",nameSlug:"loki",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"💎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"💎",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"🍎"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Spring",outfitSlug:"spring",secondaryShape:"💎"},{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer",secondaryShape:"⌛"}]},{name:"Thorr",nameSlug:"thorr",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍎"}]}]},{name:"Holy War",nameSlug:"holy_war",darkColor:"#9f7530",lightColor:"#ffea5b",characters:[{name:"Tailtiu",nameSlug:"tailtiu",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Dark",outfitSlug:"dark"},{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Maid",outfitSlug:"maid",secondaryShape:"🍐"}]},{name:"Ethyln",nameSlug:"ethyln",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Ethlyn",nameSlug:"ethlyn",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Ballroom",outfitSlug:"ballroom",secondaryShape:"⌛"}]},{name:"Ayra",nameSlug:"ayra",heightInCm:160,initialRoaster:!0,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Maid",outfitSlug:"maid"}]},{name:"Annand",nameSlug:"annand",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Dithorba",nameSlug:"dithorba",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Erinys",nameSlug:"erinys",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Lachesis",nameSlug:"lachesis",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Night",outfitSlug:"night"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Ballroom",outfitSlug:"ballroom"}]},{name:"Deirdre",nameSlug:"deirdre",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"🟣"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Ballroom",outfitSlug:"ballroom"}]},{name:"Silvia",nameSlug:"silvia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Larcei",nameSlug:"larcei",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:200,mainShape:"🍎",outfit:"Armored",outfitSlug:"armored"}]},{name:"Lene",nameSlug:"lene",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"⌛"}]},{name:"Julia ",nameSlug:"julia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Ascendant",outfitSlug:"ascendant"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Fallen",outfitSlug:"fallen",secondaryShape:"🍎"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Scion",outfitSlug:"scion",secondaryShape:"🟣"}]},{name:"Altena",nameSlug:"altena",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Ishtar",nameSlug:"ishtar",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"⌛",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:200,mainShape:"🍐",outfit:"Ascended",outfitSlug:"ascended"},{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🟣"},{outfitWeightThresholdInLb:550,mainShape:"🟣",outfit:"Ballroom",outfitSlug:"ballroom",secondaryShape:"🍎"}]},{name:"Hilda",nameSlug:"hilda",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Ullr",nameSlug:"ullr",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Brigid",nameSlug:"brigid",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Pirate",outfitSlug:"pirate"}]}]},{name:"Mirage",nameSlug:"mirage",darkColor:"#181827",lightColor:"#4c3c4b",characters:[{name:"Tsubasa",nameSlug:"tsubasa",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Kiria",nameSlug:"kiria",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Eleanora",nameSlug:"eleanora",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"}]}]},{name:"Tellius",nameSlug:"tellius",darkColor:"#2e4cc7",lightColor:"#91bfff",characters:[{name:"Titania",nameSlug:"titania",heightInCm:160,initialRoaster:!0,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Devoted",outfitSlug:"devoted",secondaryShape:"🍎"}]},{name:"Elincia",nameSlug:"elincia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"🟣"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Armored",outfitSlug:"armored",secondaryShape:"🍎"},{outfitWeightThresholdInLb:250,mainShape:"💎",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"⌛"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍎"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Yukata",outfitSlug:"yukata",secondaryShape:"🍎"}]},{name:"Nephenee",nameSlug:"nephenee",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍐",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Ballroom",outfitSlug:"ballroom",secondaryShape:"🍐"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Yukata",outfitSlug:"yukata"}]},{name:"Sigrun",nameSlug:"sigrun",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🍎"}]},{name:"Tanith",nameSlug:"tanith",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Bride",outfitSlug:"bride",secondaryShape:"💎"}]},{name:"Marcia",nameSlug:"marcia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Astrid",nameSlug:"astrid",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Petrine",nameSlug:"petrine",heightInCm:160,initialRoaster:!0,outfits:[{outfitWeightThresholdInLb:450,mainShape:"💎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Ilyana",nameSlug:"ilyana",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Harvest",outfitSlug:"harvest"}]},{name:"Mia",nameSlug:"mia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Harvest",outfitSlug:"harvest"}]},{name:"Lethe",nameSlug:"lethe",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"New Year",outfitSlug:"new_year",secondaryShape:"🍎"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Harvest",outfitSlug:"harvest"}]},{name:"Leanne",nameSlug:"leanne",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Leane",nameSlug:"leane",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Dancer",outfitSlug:"dancer"}]},{name:"Ena",nameSlug:"ena",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Harvest",outfitSlug:"harvest"}]},{name:"Lucia",nameSlug:"lucia",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Yukata",outfitSlug:"yukata",secondaryShape:"🍎"}]},{name:"Nailah",nameSlug:"nailah",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🍎"}]},{name:"Altina",nameSlug:"altina",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Dancer",outfitSlug:"dancer"},{outfitWeightThresholdInLb:250,mainShape:"💎",outfit:"Winter",outfitSlug:"winter",secondaryShape:"⌛"},{outfitWeightThresholdInLb:200,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"}]},{name:"Ashera",nameSlug:"ashera",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"⌛",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Heather",nameSlug:"heather",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Ninja",outfitSlug:"ninja"}]},{name:"Vika",nameSlug:"vika",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Pirate",outfitSlug:"pirate"}]}]},{name:"Sacred Stones",nameSlug:"sacred_stones",darkColor:"#2daca6",lightColor:"#8dfde9",characters:[{name:"Eirika",nameSlug:"eirika",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"💎",outfit:"Legendary",outfitSlug:"legendary",secondaryShape:"🟣"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Armored",outfitSlug:"armored"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"🍐"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Brave",outfitSlug:"brave",secondaryShape:"🍐"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🍎"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍎"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Winter",outfitSlug:"winter"}]},{name:"Syrene",nameSlug:"syrene",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Vanessa",nameSlug:"vanessa",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Base",outfitSlug:"base"}]},{name:"Selena",nameSlug:"selena",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍐"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer"}]},{name:"Natasha",nameSlug:"natasha",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Marisa",nameSlug:"marisa",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring",secondaryShape:"⌛"}]},{name:"Tethys",nameSlug:"tethys",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"L'Arachel",nameSlug:"larachel",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍐",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant"},{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍎"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Harvest",outfitSlug:"harvest"}]}]},{name:"Shadow Dragon",nameSlug:"shadow_dragon",darkColor:"#4d497a",lightColor:"#f3b8cc",characters:[{name:"Caeda",nameSlug:"caeda",heightInCm:160,outfits:[{outfitWeightThresholdInLb:200,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Beloved Queen",outfitSlug:"beloved_queen"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Marth's Faithful",outfitSlug:"marths_faithful",secondaryShape:"🟣"},{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer"},{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Bride",outfitSlug:"bride",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🍐"}]},{name:"Elice",nameSlug:"elice",heightInCm:160,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Winter",outfitSlug:"winter",secondaryShape:"🟣"}]},{name:"Nyna",nameSlug:"nyna",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Linde",nameSlug:"linde",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:200,mainShape:"🍎",outfit:"Askr",outfitSlug:"askr"},{outfitWeightThresholdInLb:200,mainShape:"🍐",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"🟣"}]},{name:"Linde (Summer",nameSlug:"linde_summer",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Minerva",nameSlug:"minerva",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Muspell",outfitSlug:"muspell"}]},{name:"Palla",nameSlug:"palla",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🍐"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🍎"}]},{name:"Catria",nameSlug:"catria",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🟣",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:200,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Bride",outfitSlug:"bride"},{outfitWeightThresholdInLb:250,mainShape:"🟣",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"🟣"},{outfitWeightThresholdInLb:350,mainShape:"⌛",outfit:"Resplendant",outfitSlug:"resplendant",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Wind Tribe",outfitSlug:"wind_tribe"}]},{name:"Lena",nameSlug:"lena",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Base",outfitSlug:"base"}]},{name:"Sheena",nameSlug:"sheena",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:600,mainShape:"🍐",outfit:"Embla",outfitSlug:"embla",secondaryShape:"🍎"}]},{name:"Nagi",nameSlug:"nagi",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍐",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Harvest",outfitSlug:"harvest"}]},{name:"Eremiya",nameSlug:"eremiya",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Clarisse",nameSlug:"clarisse",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Phina",nameSlug:"phina",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Athena",nameSlug:"athena",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Malice",nameSlug:"malice",heightInCm:160,outfits:[{outfitWeightThresholdInLb:550,mainShape:"⌛",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Kris",nameSlug:"kris",heightInCm:160,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]}]},{name:"Thracia",nameSlug:"thracia",darkColor:"#7e2235",lightColor:"#fe5664",characters:[{name:"Eyvel",nameSlug:"eyvel",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Tanya",nameSlug:"tanya",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Safy",nameSlug:"safy",heightInCm:160,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Olwen",nameSlug:"olwen",heightInCm:160,outfits:[{outfitWeightThresholdInLb:250,mainShape:"💎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Armored",outfitSlug:"armored"},{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Resplendant",outfitSlug:"resplendant"}]}]},{name:"Three Houses",nameSlug:"three_houses",darkColor:"#9f9b91",lightColor:"#fff7db",characters:[{name:"Female Byleth",nameSlug:"female_byleth",heightInCm:164,initialRoaster:!0,outfits:[{outfitWeightThresholdInLb:400,mainShape:"💎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Ascended",outfitSlug:"ascended",secondaryShape:"💎"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Fallen",outfitSlug:"fallen",secondaryShape:"⌛"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Summer",outfitSlug:"summer"},{outfitWeightThresholdInLb:400,mainShape:"💎",outfit:"Legendary",outfitSlug:"legendary",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Winter",outfitSlug:"winter"}]},{name:"Rhea",nameSlug:"rhea",heightInCm:172,outfits:[{outfitWeightThresholdInLb:400,mainShape:"⌛",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Persona",outfitSlug:"persona"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Fallen",outfitSlug:"fallen"},{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"},{outfitWeightThresholdInLb:400,mainShape:"⌛",outfit:"Harvest",outfitSlug:"harvest",secondaryShape:"🍐"}]},{name:"Catherine",nameSlug:"catherine",heightInCm:175,outfits:[{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"}]},{name:"Shamir",nameSlug:"shamir",heightInCm:169,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"⌛",outfit:"Ninja",outfitSlug:"ninja"},{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer",secondaryShape:"⌛"}]},{name:"Cornelia",nameSlug:"cornelia",heightInCm:168,outfits:[{outfitWeightThresholdInLb:500,mainShape:"⌛",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Kronya",nameSlug:"kronya",heightInCm:157,outfits:[{outfitWeightThresholdInLb:500,mainShape:"⌛",secondaryShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Female Shez",nameSlug:"female_shez",heightInCm:170,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Brave",outfitSlug:"brave",secondaryShape:"🟣"},{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Summer",outfitSlug:"summer"}]},{name:"Monica",nameSlug:"monica",heightInCm:157,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"}]},{name:"Arval",nameSlug:"arval",heightInCm:160,outfits:[{outfitWeightThresholdInLb:600,mainShape:"🍎",secondaryShape:"🍎",outfit:"Base",outfitSlug:"base"}]},{name:"Manuela",nameSlug:"manuela",heightInCm:172,outfits:[{outfitWeightThresholdInLb:500,mainShape:"💎",outfit:"Winter",outfitSlug:"winter"}]},{name:"Edelgard",nameSlug:"edelgard",heightInCm:158,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Legendary",outfitSlug:"legendary"},{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Ascended",outfitSlug:"ascended"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Christmas",outfitSlug:"christmas"},{outfitWeightThresholdInLb:450,mainShape:"🍎",outfit:"Persona",outfitSlug:"persona",secondaryShape:"🍎"},{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Fallen",outfitSlug:"fallen",secondaryShape:"💎"}]},{name:"Dorothea",nameSlug:"dorothea",heightInCm:170,outfits:[{outfitWeightThresholdInLb:250,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Christmas",outfitSlug:"christmas",secondaryShape:"🍎"},{outfitWeightThresholdInLb:300,mainShape:"🍐",outfit:"Dancer",outfitSlug:"dancer",secondaryShape:"⌛"},{outfitWeightThresholdInLb:600,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer"}]},{name:"Annette",nameSlug:"annette",heightInCm:153,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Christmas",outfitSlug:"christmas"}]},{name:"Bernadetta",nameSlug:"bernadetta",heightInCm:150,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Spring",outfitSlug:"spring",secondaryShape:"🟣"},{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Winter",outfitSlug:"winter",secondaryShape:"⌛"},{outfitWeightThresholdInLb:200,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍐"}]},{name:"Constance",nameSlug:"constance",heightInCm:164,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🟣",outfit:"Base",outfitSlug:"base"}]},{name:"Hapi",nameSlug:"hapi",heightInCm:169,outfits:[{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Base",outfitSlug:"base"}]},{name:"Hilda",nameSlug:"hilda",heightInCm:154,outfits:[{outfitWeightThresholdInLb:250,mainShape:"💎",secondaryShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"⌛",outfit:"Ascended",outfitSlug:"ascended"},{outfitWeightThresholdInLb:450,mainShape:"🍐",outfit:"Christmas",outfitSlug:"christmas",secondaryShape:"⌛"},{outfitWeightThresholdInLb:500,mainShape:"⌛",outfit:"Summer",outfitSlug:"summer",secondaryShape:"💎"}]},{name:"Ingrid",nameSlug:"ingrid",heightInCm:165,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🍎",outfit:"Rearmed",outfitSlug:"rearmed",secondaryShape:"🟣"},{outfitWeightThresholdInLb:400,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🍎"}]},{name:"Lysithea",nameSlug:"lysithea",heightInCm:160,outfits:[{outfitWeightThresholdInLb:500,mainShape:"🍐",outfit:"Base",outfitSlug:"base"}]},{name:"Marianne",nameSlug:"marianne",heightInCm:163,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🟣",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:250,mainShape:"🍎",outfit:"Dancer",outfitSlug:"dancer"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Armored",outfitSlug:"armored",secondaryShape:"💎"},{outfitWeightThresholdInLb:500,mainShape:"🍎",outfit:"Summer",outfitSlug:"summer",secondaryShape:"🟣"}]},{name:"Mercedes",nameSlug:"mercedes",heightInCm:169,outfits:[{outfitWeightThresholdInLb:400,mainShape:"🍎",secondaryShape:"💎",outfit:"Base",outfitSlug:"base"},{outfitWeightThresholdInLb:300,mainShape:"🟣",outfit:"Summer",outfitSlug:"summer"},{outfitWeightThresholdInLb:350,mainShape:"💎",outfit:"Picnic",outfitSlug:"picnic"}]},{name:"Leonie",nameSlug:"leonie",heightInCm:168,outfits:[{outfitWeightThresholdInLb:350,mainShape:"🍐",outfit:"Summer",outfitSlug:"summer"}]}]}];function Ct(e,t,r){const s=e.slice();return s[12]=t[r],s}function Gt(e,t,r){const s=e.slice();return s[15]=t[r],s}function Ot(e){let t,r=e[15]+"",s,i;return{c(){t=F("option"),s=V(r),i=x(),le(t,"color",e[3][e[15]].color),le(t,"font-weight","600"),t.__value=e[15],N(t,t.__value)},m(n,a){B(n,t,a),O(t,s),O(t,i)},p:U,d(n){n&&D(t)}}}function At(e){let t,r=e[12]+"",s,i,n;return{c(){t=F("option"),s=V(r),i=x(),t.__value=n=e[12],N(t,t.__value)},m(a,c){B(a,t,c),O(t,s),O(t,i)},p(a,c){c&1&&r!==(r=a[12]+"")&&qt(s,r),c&17&&n!==(n=a[12])&&(t.__value=n,N(t,t.__value))},d(a){a&&D(t)}}}function rs(e){let t,r,s,i,n,a,c,g,f,T,b,L,k=te(e[4]),I=[];for(let d=0;d<k.length;d+=1)I[d]=Ot(Gt(e,k,d));let w=te(e[3][e[0].target].outfits),E=[];for(let d=0;d<w.length;d+=1)E[d]=At(Ct(e,w,d));return{c(){t=F("form"),r=F("select");for(let d=0;d<I.length;d+=1)I[d].c();s=x(),i=F("select"),n=F("option"),n.textContent="undeclared";for(let d=0;d<E.length;d+=1)E[d].c();a=F("option"),a.textContent="broken",c=x(),g=F("input"),f=x(),T=F("input"),le(r,"color",e[3][e[0].target].color),le(r,"font-weight","600"),e[0].target===void 0&&pe(()=>e[5].call(r)),n.__value="undeclared",N(n,n.__value),a.__value="broken",N(a,a.__value),e[0].targetOutfit===void 0&&pe(()=>e[6].call(i)),z(g,"type","number"),z(g,"min","1"),z(T,"type","button"),T.value="X",z(T,"class","delete svelte-963viu"),z(t,"class","svelte-963viu")},m(d,C){B(d,t,C),O(t,r);for(let S=0;S<I.length;S+=1)I[S]&&I[S].m(r,null);me(r,e[0].target,!0),O(t,s),O(t,i),O(i,n);for(let S=0;S<E.length;S+=1)E[S]&&E[S].m(i,null);O(i,a),me(i,e[0].targetOutfit,!0),O(t,c),O(t,g),N(g,e[0].amount),O(t,f),O(t,T),b||(L=[q(r,"change",e[5]),q(r,"change",e[2]),q(i,"change",e[6]),q(i,"change",e[2]),q(g,"input",e[7]),q(g,"change",e[2]),q(T,"click",e[1])],b=!0)},p(d,[C]){if(C&24){k=te(d[4]);let S;for(S=0;S<k.length;S+=1){const v=Gt(d,k,S);I[S]?I[S].p(v,C):(I[S]=Ot(v),I[S].c(),I[S].m(r,null))}for(;S<I.length;S+=1)I[S].d(1);I.length=k.length}if(C&1&&le(r,"color",d[3][d[0].target].color),C&17&&me(r,d[0].target),C&9){w=te(d[3][d[0].target].outfits);let S;for(S=0;S<w.length;S+=1){const v=Ct(d,w,S);E[S]?E[S].p(v,C):(E[S]=At(v),E[S].c(),E[S].m(i,a))}for(;S<E.length;S+=1)E[S].d(1);E.length=w.length}C&17&&me(i,d[0].targetOutfit),C&17&&jt(g.value)!==d[0].amount&&N(g,d[0].amount)},i:U,o:U,d(d){d&&D(t),Ce(I,d),Ce(E,d),b=!1,Q(L)}}}function os(e,t,r){function s(w){return Pt.flatMap(E=>E.characters).filter(E=>E.nameSlug===w).at(0)||null}function i(w,E){var d;return E==="broken"||(((d=s(w))==null?void 0:d.outfits)||[]).map(C=>C.outfitSlug).includes(E)}const n=Wr();function a(){n("delete")}function c(){i(b.target,b.targetOutfit)||r(0,b.targetOutfit="undeclared",b),n("change")}const g=Pt.flatMap(w=>w.characters.map(E=>[E.nameSlug,{color:w.darkColor,outfits:E.outfits.map(d=>d.outfitSlug||"base")}])),f=Object.fromEntries(g),T=Object.keys(f).sort();let{donation:b}=t;function L(){b.target=ft(this),r(0,b),r(4,T)}function k(){b.targetOutfit=ft(this),r(0,b),r(4,T)}function I(){b.amount=jt(this.value),r(0,b),r(4,T)}return e.$$set=w=>{"donation"in w&&r(0,b=w.donation)},[b,a,c,f,T,L,k,I]}class ss extends qe{constructor(t){super(),je(this,t,os,rs,Fe,{donation:0})}}function Rt(e,t,r){const s=e.slice();return s[12]=t[r],s[14]=r,s}function Ft(e){let t,r;function s(){return e[7](e[14])}return t=new ss({props:{donation:e[12]}}),t.$on("delete",s),t.$on("change",e[8]),{c(){xt(t.$$.fragment)},m(i,n){Be(t,i,n),r=!0},p(i,n){e=i;const a={};n&1&&(a.donation=e[12]),t.$set(a)},i(i){r||(M(t.$$.fragment,i),r=!0)},o(i){ie(t.$$.fragment,i),r=!1},d(i){Ue(t,i)}}}function is(e){let t,r,s,i,n=e[2]?"Save":"No changes to save",a,c,g,f,T,b,L,k,I,w,E=te(e[0]),d=[];for(let S=0;S<E.length;S+=1)d[S]=Ft(Rt(e,E,S));const C=S=>ie(d[S],1,1,()=>{d[S]=null});return{c(){for(let S=0;S<d.length;S+=1)d[S].c();t=x(),r=F("button"),r.textContent="Add a donation",s=x(),i=F("button"),a=V(n),g=x(),f=F("form"),T=F("label"),b=V(`Token
    `),L=F("input"),i.disabled=c=!e[2],z(L,"type","password")},m(S,v){for(let P=0;P<d.length;P+=1)d[P]&&d[P].m(S,v);B(S,t,v),B(S,r,v),B(S,s,v),B(S,i,v),O(i,a),B(S,g,v),B(S,f,v),O(f,T),O(T,b),O(T,L),N(L,e[1]),k=!0,I||(w=[q(r,"click",e[5]),q(i,"click",e[6]),q(L,"input",e[9]),q(L,"change",e[10])],I=!0)},p(S,[v]){if(v&21){E=te(S[0]);let P;for(P=0;P<E.length;P+=1){const j=Rt(S,E,P);d[P]?(d[P].p(j,v),M(d[P],1)):(d[P]=Ft(j),d[P].c(),M(d[P],1),d[P].m(t.parentNode,t))}for(Nt(),P=E.length;P<d.length;P+=1)C(P);Ht()}(!k||v&4)&&n!==(n=S[2]?"Save":"No changes to save")&&qt(a,n),(!k||v&4&&c!==(c=!S[2]))&&(i.disabled=c),v&2&&L.value!==S[1]&&N(L,S[1])},i(S){if(!k){for(let v=0;v<E.length;v+=1)M(d[v]);k=!0}},o(S){d=d.filter(Boolean);for(let v=0;v<d.length;v+=1)ie(d[v]);k=!1},d(S){S&&(D(t),D(r),D(s),D(i),D(g),D(f)),Ce(d,S),I=!1,Q(w)}}}const Dt="8c4b31c95b425cb40d3f865d95561bfa";function ns(e,t,r){let s,i=(()=>{const w=localStorage.getItem("fehwgc-admin")||"";return w&&(s=new Wt({auth:w})),w})();function n(){localStorage.setItem("fehwgc-admin",i),s=new Wt({auth:i})}let{donations:a}=t,c=!1;function g(w){a.splice(w,1),r(0,a),r(2,c=!0)}function f(){r(2,c=!0),a.push({target:"edelgard",targetOutfit:"undeclared",amount:0}),r(0,a)}const T=async()=>{await s.request(`PATCH /gists/${Dt}`,{gist_id:Dt,files:{"donos.csv":{content:a.map(w=>`${w.target},${w.targetOutfit},${w.amount}`).join(`
`)}}}),r(2,c=!1)},b=w=>g(w),L=()=>{r(2,c=!0)};function k(){i=this.value,r(1,i)}const I=()=>n();return e.$$set=w=>{"donations"in w&&r(0,a=w.donations)},[a,i,c,n,g,f,T,b,L,k,I]}class as extends qe{constructor(t){super(),je(this,t,ns,is,Fe,{donations:0})}}function us(e){let t,r=e[1]+"",s;return{c(){t=V("Error: "),s=V(r)},m(i,n){B(i,t,n),B(i,s,n)},p:U,i:U,o:U,d(i){i&&(D(t),D(s))}}}function ls(e){let t,r;return t=new as({props:{donations:e[0]}}),{c(){xt(t.$$.fragment)},m(s,i){Be(t,s,i),r=!0},p:U,i(s){r||(M(t.$$.fragment,s),r=!0)},o(s){ie(t.$$.fragment,s),r=!1},d(s){Ue(t,s)}}}function hs(e){let t;return{c(){t=V("Loading data...")},m(r,s){B(r,t,s)},p:U,i:U,o:U,d(r){r&&D(t)}}}function cs(e){let t,r,s,i,n={ctx:e,current:null,token:null,hasCatch:!0,pending:hs,then:ls,catch:us,value:0,error:1,blocks:[,,,]};return Ar(ps(),n),{c(){t=F("main"),r=F("h1"),r.textContent="Weight gain chart admin",s=x(),n.block.c(),z(t,"class","container svelte-wfmixh")},m(a,c){B(a,t,c),O(t,r),O(t,s),n.block.m(t,n.anchor=null),n.mount=()=>t,n.anchor=null,i=!0},p(a,[c]){e=a,Rr(n,e,c)},i(a){i||(M(n.block),i=!0)},o(a){for(let c=0;c<3;c+=1){const g=n.blocks[c];ie(g)}i=!1},d(a){a&&D(t),n.block.d(),n.token=null,n=null}}}async function ps(){const e=await fetch("https://api.github.com/gists/8c4b31c95b425cb40d3f865d95561bfa",{headers:{Accept:"application/vnd.github+json"}});return(JSON.parse(await e.text()).files["donos.csv"]||{content:""}).content.split(`
`).map(r=>r.split(",")).map(r=>({target:r[0],targetOutfit:r[1],amount:parseInt(r[2])})).filter(r=>!!r.target)}class gs extends qe{constructor(t){super(),je(this,t,null,cs,Fe,{})}}new gs({target:document.getElementById("app")});
